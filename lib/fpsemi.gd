#############################################################################
##
#W  fpsemi.gd           GAP library          Andrew Solomon and Isabel Araujo
##
#H  @(#)$Id$
##
#Y  Copyright (C)  1997,  Lehrstuhl D fuer Mathematik,  RWTH Aachen,  Germany
#Y  (C) 1998 School Math and Comp. Sci., University of St.  Andrews, Scotland
##
##  This file contains the declarations for finitely 
##  presented semigroups and monoids. Semigroups are the primary 
##  object in this implementation. 
##
##  One may create fp semigroups which happen to be monoids
##  by factoring the free monoid by some relations.
##  An finitely presented semigroup is automatically created with the
##  supplied relations and the relations involving a new generator 
##  representing the identity.
##
Revision.fpsemi_gd :=
    "@(#)$Id$";


#############################################################################
##
#C  IsElementOfFpSemigroup(<elm>)
##
##	returns true if <elm> is an element of a finitely presented semigroup. 
##
DeclareCategory( "IsElementOfFpSemigroup",
    IsMultiplicativeElement and IsAssociativeElement );

#############################################################################
##
#C  IsElementOfFpSemigroupCollection(<e>)
##
##  Created now so that lists of things in the category IsElementOfFpSemigroup
##  are given the category CategoryCollections(IsElementOfFpSemigroup)
##  Otherwise these lists (and other collections) won't create the 
##  collections category. See CollectionsCategory in the manual.
##   
DeclareCategoryCollections("IsElementOfFpSemigroup");

#############################################################################
##
#A  IsSubsemigroupFpSemigroup( <T> )
##  
##	true if <T> is a finitely presented semigroup or a 
##	subsemigroup of a finitely presented semigroup
##	(generally speaking, such a semigroup can be constructed
##	with `Semigroup(<gens>)', where <gens> is a list of elements
##	of a finitely presented semigroup).
##
DeclareSynonymAttr( "IsSubsemigroupFpSemigroup", 
	IsSemigroup and IsElementOfFpSemigroupCollection );

#############################################################################
##  
#C  IsElementOfFpSemigroupFamily
##
DeclareCategoryFamily( "IsElementOfFpSemigroup" );

#############################################################################
##
#F  FactorFreeSemigroupByRelations( <F>, <rels> )
#F  FactorFreeMonoidByRelations( <F>, <rels> )
##
##  <F> is a free semigroup (resp. monoid) and <rels> is a list of
##  pairs of elements of <F>. Returns the fp semigroup which
##  is the quotient of <F> by the least congruence on <F> generated by
##  the pairs in <rels>.
##
##  In case <F> is a free monoid, this function constructs a 
##  new free semigroup with one more generator <e> (representing 
##  the identity) and adds new relations to <rels> of the form 
##  $e*g=g$, $g*e=g$ for all the generators <g> of the original monoid
##  then constructs the fp semigroup in the same way as for the 
##  free semigroup case.
##
DeclareGlobalFunction("FactorFreeSemigroupByRelations");
DeclareGlobalFunction("FactorFreeMonoidByRelations");

#############################################################################
##  
#O  ElementOfFpSemigroup( <fam>, <word> )
##  
##  If <fam> is the elements family of a finitely presented semigroup and <word>
##  is a word in the free generators underlying this finitely presented
##  semigroup, this operation creates the element with the representative <word>
##  in the free semigroup.
##
DeclareOperation( "ElementOfFpSemigroup",
    [ IsElementOfFpSemigroupFamily, IsAssocWord ] );

#############################################################################
##
#P  IsFpSemigroup(<S>)
##
##  is a synonym for `IsSubsemigroupFpSemigroup(<S>)' and 
##  `IsWholeFamily(<S>)' (this is because a subsemigroup
##  of a finitely presented semigroup is not necessarily finitely presented).
##
DeclareSynonym( "IsFpSemigroup",IsSubsemigroupFpSemigroup and IsWholeFamily);

#############################################################################
## 
#A  FreeGeneratorsOfFpSemigroup( <T> )
## 
##  returns the underlying free generators corresponding to the 
##	generators of the finitely presented semigroup <T>.  
## 
DeclareAttribute("FreeGeneratorsOfFpSemigroup",  IsFpSemigroup );

#############################################################################
## 
#A  FreeSemigroupOfFpSemigroup( <T> )
## 
##	returns the underlying free semigroup for the finitely presented 
##	semigroup <T>, ie, the free semigroup over which <T> is defined 
##	as a quotient
##	(this is the free semigroup generated by the free generators provided 
##	by `FreeGeneratorsOfFpSemigroup(<T>)').
##
DeclareAttribute("FreeSemigroupOfFpSemigroup", IsFpSemigroup);

############################################################################
##
#A  RelationsOfFpSemigroup(<S>)
##
##  returns the relations of the finitely presented semigroup <S> as
##  pairs of words in the free generators provided by
##  `FreeGeneratorsOfFpSemigroup(<S>)'.
##
##
DeclareAttribute("RelationsOfFpSemigroup",IsFpSemigroup);

############################################################################
##
#A  IsomorphismFpSemigroup( <S> )
##
##	Returns an isomorphism from <S> to an fp semigroup 
##
DeclareAttribute("IsomorphismFpSemigroup",IsSemigroup);


#############################################################################
##
#E

