#############################################################################
##
#W  smgideal.gd              GAP library                     Robert Arthur
##
#H  @(#)$Id$
##
#Y  Copyright (C)  1996,  Lehrstuhl D fuer Mathematik,  RWTH Aachen,  Germany
#Y  (C) 1998 School Math and Comp. Sci., University of St.  Andrews, Scotland
##
##  This file contains declarations relating to semigroup ideals.
##
Revision.smgideal_gd :=
    "@(#)$Id$";


#############################################################################
##
#O  SemigroupIdealByGenerators(<S>, <gens>)
##
##  <S> is a semigroup, <gens> is a list of elements of <S>.
##  Returns the two-sided ideal of <S> generated by <gens>.
##
DeclareSynonym("SemigroupIdealByGenerators", MagmaIdealByGenerators );

#############################################################################
##
#P  IsLeftSemigroupIdeal(<I>)
#P  IsRightSemigroupIdeal(<I>)
#P  IsSemigroupIdeal(<I>)
##  
##  Categories of semigroup ideals.
##
DeclareProperty("IsLeftSemigroupIdeal", IsLeftMagmaIdeal );
DeclareProperty("IsRightSemigroupIdeal", IsRightMagmaIdeal );
DeclareProperty("IsSemigroupIdeal", IsMagmaIdeal );

#############################################################################
##
#C  IsRightSemigroupIdealEnumerator
#C  IsLeftSemigroupIdealEnumerator
#C  IsSemigroupIdealEnumerator
##
##	Categories for generic semigroup ideal enumerators. 
##
DeclareCategory("IsRightSemigroupIdealEnumerator", IsDomainEnumerator);
DeclareCategory("IsLeftSemigroupIdealEnumerator", IsDomainEnumerator);
DeclareCategory("IsSemigroupIdealEnumerator", IsDomainEnumerator);



#############################################################################
##
#A  ReesCongruenceOfSemigroupIdeal( <I> )
##
##  A two sided ideal <I> of a semigroup <S>  defines a congruence on 
##  <S> given by $\Delta \cup I \times I$.
##
DeclareAttribute("ReesCongruenceOfSemigroupIdeal", IsMagmaIdeal);







#############################################################################
##
#E
