#!/bin/sh
#############################################################################
##
#W  zooit							 Frank Celler
#W       						     Alexander Hulpke
##
##  this shell script zoos up the next version
##
if [ -z "$BINDIR" ];  then
    echo "PANIC: you must set 'BINDIR'"
    exit 1
fi
if ${BINDIR}/checkvar;  then echo;  else
    exit 1
fi

chmod a+x ${BINDIR}/saytext
chmod a+x ${BINDIR}/saybin


# clean the old files
cd ${DISTROOT}
[ -d OLD ] || mkdir OLD
rm -rf OLD/*
mv [a-z]*.zoo [a-z]*.tar [a-z]*.zip [a-z]*.tar.gz split OLD

if [ \! -d split ];  then
    mkdir split
fi

# remove things that should not go in the distribution

echo "Cleaning up before wrapping"
(cd $DISTROOT/$DISTNAME;

rm -rf doc/build doc/abattoir doc/Makefile alpha beta dev dev \
  config.*

find . -name .cvsignore -exec rm {} \;
)


# go into the source directory and create the zoo files
echo "$0: zooing version $VERSION of $DATE"

#echo "README file"
#cp ${DISTNAME}/etc/README .

. ${BINDIR}/zoofuncs

(cd $DISTROOT;


echo "Removing old attempts"



echo "Supplemental packages"

rm -rf supppkgs
mkdir supppkgs
( cd supppkgs
  ../${DISTNAME}/etc/GETPKG/getpkg S ../${DISTNAME}/etc/GETPKG/pkg$RBVERSION )



for j in supppkgs/*.zoo; do
    ${DISTNAME}/etc/zoomerge3 xtom$RBVERSION $j ${DISTNAME}/pkg
done;

#    (cd supppkgs
#    addtext ../xtom$RBVERSION READM*    )



echo "HTML Documentation (section-wise)"

for j in ref tut ext prg new; do
   addtext split/html_sect$RBVERSION ${DISTNAME}/doc/htm_small/${j}/*
done

addtext split/html_sect$RBVERSION ${DISTNAME}/doc/htm_small/*.htm

echo "Basic version"

for j in lib grp tst pkg/example pkg/example/src pkg/example/doc pkg/example/gap; do
    addtext basic$RBVERSION ${DISTNAME}/${j}/*
done

addtext basic$RBVERSION ${DISTNAME}/etc/*.vim ${DISTNAME}/etc/emacs/* ${DISTNAME}/etc/xrmtcmd.c
addtext basic$RBVERSION ${DISTNAME}/etc/GPL

touch ${DISTNAME}/pkg/NOAUTO
addtext basic$RBVERSION ${DISTNAME}/pkg/ALLPKG ${DISTNAME}/pkg/NOAUTO

echo "Documentation -- TeX files"

for j in ref tut ext prg new; do
    addtext split/doc$RBVERSION ${DISTNAME}/doc/${j}/*.tex
    addtext basic$RBVERSION ${DISTNAME}/doc/${j}/*.tex

done

for i in gapmacro.tex manual.bib manualindex; do
    addtext basic$RBVERSION ${DISTNAME}/doc/$i
    addtext split/doc$RBVERSION ${DISTNAME}/doc/$i
done


for j in six mst; do
    addtext split/doc$RBVERSION ${DISTNAME}/doc/{ref,tut,ext,prg,new}/manual.$j
    addtext basic$RBVERSION ${DISTNAME}/doc/{ref,tut,ext,prg,new}/manual.$j
done


# this version will also be used for mac and pc, we don't give them the
# source however.
cp basic$RBVERSION.zoo macpc.zoo
cp basic$RBVERSION.zip macpc.zip
cp basic$RBVERSION.tar macpc.tar

echo "Source files"

cp ${BINDIR}/FILES .

cp INSTALL ${DISTNAME}

addtext basic$RBVERSION ${DISTNAME}/INSTALL
addtext basic$RBVERSION ${DISTNAME}/gap.shi
addtext split/src$RBVERSION ${DISTNAME}/gap.shi

for j in src cnf; do
    addtext split/src$RBVERSION ${DISTNAME}/${j}/*
    addtext basic$RBVERSION ${DISTNAME}/${j}/*
done

for i in  ${DISTNAME}/{Makefile.in,sysinfo.in,configure}; do
    addtext  split/src$RBVERSION $i
    addtext basic$RBVERSION $i
done

echo "Omnibus edition"
# extend the basic version
cp basic$RBVERSION.zoo gap$RBVERSION.zoo
cp basic$RBVERSION.zip gap$RBVERSION.zip
cp basic$RBVERSION.tar gap$RBVERSION.tar

echo "TeXed Documentation"
addbin docdvi$RBVERSION ${DISTNAME}/doc/*/manual.dvi
addbin macpc ${DISTNAME}/doc/*/manual.dvi
addbin gap$RBVERSION ${DISTNAME}/doc/*/manual.dvi

for i in docdvi$RBVERSION macpc gap$RBVERSION; do
    addbin $i ${DISTNAME}/doc/fullindex.dvi
done

(cd split; ln -s ../docdvi$RBVERSION.zoo .)
(cd split; ln -s ../docdvi$RBVERSION.zip .)
(cd split; ln -s ../docdvi$RBVERSION.tar.gz .)

addbin docpdf$RBVERSION ${DISTNAME}/doc/*/manual.pdf
addbin macpc ${DISTNAME}/doc/*/manual.pdf
addbin gap$RBVERSION ${DISTNAME}/doc/*/manual.pdf


addbin docpdf$RBVERSION  ${DISTNAME}/doc/fullindex.pdf
addbin gap$RBVERSION  ${DISTNAME}/doc/fullindex.pdf

(cd split; ln -s ../docpdf$RBVERSION.zoo .)
(cd split; ln -s ../docpdf$RBVERSION.zip .)
(cd split; ln -s docpdf$RBVERSION.tar.gz .)


# postscript files (do we really still want them?)
addtext docps$RBVERSION ${DISTNAME}/doc/*/manual.ps

addtext docps$RBVERSION ${DISTNAME}/doc/fullindex.ps

(cd split; ln -s ../docps$RBVERSION.zoo .)
(cd split; ln -s ../docps$RBVERSION.zip .)
(cd split; ln -s ../docps$RBVERSION.tar.gz .)

echo "HTML Documentation"

for j in ref tut ext prg new; do
    for k in html$RBVERSION macpc gap$RBVERSION; do
	addtext $k ${DISTNAME}/doc/htm/${j}/*
    done
done

for i in ${DISTNAME}/doc/htm/*.htm ${DISTNAME}/pkg/example/htm/*.htm; do
    for k in html$RBVERSION macpc gap$RBVERSION; do
	addtext $k $i
    done
done

(cd split; ln -s ../html$RBVERSION.zoo .)
(cd split; ln -s ../html$RBVERSION.zip .)
(cd split; ln -s ../html$RBVERSION.tar.gz .)

echo "Trans"
for j in split/trans$RBVERSION macpc gap$RBVERSION; do
    addtext $j ${DISTNAME}/trans/*
done

cp split/trans$RBVERSION.zoo gdat$RBVERSION.zoo
cp split/trans$RBVERSION.zip gdat$RBVERSION.zip
cp split/trans$RBVERSION.tar gdat$RBVERSION.tar

echo "Small"

for j in split/small$RBVERSION gdat$RBVERSION macpc gap$RBVERSION; do
    addtext $j ${DISTNAME}/small/*.*
done

for k in id2 id3 id4 id5 small2 small3 small4 small5 small6 small7 small8; do
    echo "     " $k
    for j in split/${k}$RBVERSION gdat$RBVERSION macpc gap$RBVERSION; do
	addtext $j ${DISTNAME}/small/${k}/*
    done
done

#
# Have to do id6 separately because it's too many files
#

echo "     " id6
for j in split/id6$RBVERSION gdat$RBVERSION macpc gap$RBVERSION; do
    addtext $j ${DISTNAME}/small/id6/id1152.*
    addtext $j ${DISTNAME}/small/id6/id1920.*
    addtext $j ${DISTNAME}/small/id6/*.g
done

echo "Prim"

for j in split/prim$RBVERSION gdat$RBVERSION macpc gap$RBVERSION; do
    addtext $j ${DISTNAME}/prim/*.* ${DISTNAME}/prim/grps/*
done




#char tables and tables of marks from ctbllib tomlib and tomxtlib zoo files
#into macpc, tdat and gap

# touch tdat$RBVERSION.zoo tdat$RBVERSION.zip tdat$RBVERSION.tar

chmod 755 ${DISTNAME}/etc/zoomerge3

echo "Core packages"

# sys$RBVERSION is SL's temp. dir. containing the package .zoo files
# for Character Tables and Tables of Marks that were up to GAP 4.2
# in the library

rm -rf syspkgs
mkdir syspkgs
( cd syspkgs
  ../${DISTNAME}/etc/GETPKG/getpkg C ../${DISTNAME}/etc/GETPKG/pkg$RBVERSION )

for i in tdat$RBVERSION macpc gap$RBVERSION; do
    for j in syspkgs/*.zoo; do
	${DISTNAME}/etc/zoomerge3 $i $j ${DISTNAME}/pkg
    done;
    (cd syspkgs
    mkdir pkg
    mv READM* pkg
    addtext ../$i pkg/READM*    )
done;

echo "tools"

addtext tools${RBVERSION} ${DISTNAME}/doc/{allmanualsindex,gapmacro.tex,make_doc,mrabbrev.bib}
addtext tools${RBVERSION} ${DISTNAME}/doc/{fullindex.tex,fullindex.mst}
addtext tools${RBVERSION} ${DISTNAME}/doc/{manualindex,htm/Makefile,htm/allhtmlindex,htm/onehtmlindex}
addtext tools${RBVERSION} ${DISTNAME}/etc/{buildman.pe,convert.pl,packpack,unzoo.c,README.tools}

echo "------------------------------"

echo "Lib"
addtext split/lib$RBVERSION ${DISTNAME}/lib/*


echo "Tst"
addtext split/tst$RBVERSION ${DISTNAME}/tst/*

echo "Grp"
addtext split/grp$RBVERSION ${DISTNAME}/grp/*

echo "------------------------------"

echo "Pc version"
cp macpc.zoo gappc$RBVERSION.zoo
cp macpc.zip gappc$RBVERSION.zip
cp macpc.tar gappc$RBVERSION.tar

cp ${DISTNAME}/bin/i686-pc-cygwin-gcc/gap.exe ${DISTNAME}/bin/gapw95.exe
cp /gap/4.0/bin/cygwin1.dll ${DISTNAME}/bin
for i in ${DISTNAME}/bin/gapw95.exe ${DISTNAME}/bin/cygwin1.dll; do
    addbin gappc$RBVERSION $i 
    addbin wbin$RBVERSION $i
done

addtext gappc$RBVERSION ${DISTNAME}/bin/gap.bat
addtext wbin$RBVERSION ${DISTNAME}/bin/gap.bat
addbin gappc$RBVERSION ${DISTNAME}/bin/gap.pif
addbin wbin$RBVERSION ${DISTNAME}/bin/gap.pif
addbin gappc$RBVERSION ${DISTNAME}/bin/gapicon.bmp
addbin wbin$RBVERSION ${DISTNAME}/bin/gapicon.bmp
# instwin is obsolete now
#for i in ${DISTNAME}/bin/gap.bat ${DISTNAME}/instwin.bat; do
#    addtext gappc$RBVERSION $i 
#    addtext winbin$RBVERSION $i
#done

	
cp INSTALL.WIN ${DISTNAME}
addtext gappc$RBVERSION ${DISTNAME}/INSTALL.WIN
rm ${DISTNAME}/bin/{gapw95.exe,cygwin1.dll}

echo "Mac version"
mv macpc.zoo gapmac$RBVERSION.zoo
mv macpc.zip gapmac$RBVERSION.zip
mv macpc.tar gapmac$RBVERSION.tar

cp INSTALL-MAC.TXT ${DISTNAME}
addtext gapmac$RBVERSION ${DISTNAME}/INSTALL-MAC.TXT


##  echo "Mac src"
##  find ${DISTNAME}/{macsrc,macgac} -print | zoo ahI macsrc$RBVERSION.zoo > /dev/null

${BINDIR}/wrappkgs $RBVERSION $DISTNAME $BINDIR

echo "Compressing tar files"
gzip *.tar split/*.tar

)

exit 0
