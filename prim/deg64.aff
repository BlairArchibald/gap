Revision.deg64_aff :=
    "@(#)$Id$";

AFFINE_NON_SOLVABLE_GROUPS[ 64 ] := [
 function() return
 PrimitiveAffinePermGroupByMatrixGroup( GL( 6, 2 ) );
 end,

 # stabilizers of linear systems of imprimitivity
 function() return
 PrimitiveAffinePermGroupByMatrixGroup( WreathProductOfMatrixGroup(
  GL( 3, 2 ), SymmetricGroup( 2 ) ) );
 end,

 # stabilizers of extension fields
 function() return
 PrimitiveAffinePermGroupByMatrixGroup( StabFldExt( GL( 3, 4 ), 2 ) );
 end,
 function() return
  PrimitiveAffinePermGroupByMatrixGroup( StabFldExt( SL( 3, 4 ), 2 ) );
 end,
 function() return
  PrimitiveAffinePermGroupByMatrixGroup( GLnbylqtolInGLnq( GL( 3, 4 ), 2 ) );
 end,
 function() return
   PrimitiveAffinePermGroupByMatrixGroup( GLnbylqtolInGLnq( SL( 3, 4 ), 2 ) );
 end,
  [ "3.A_6.2 max GL(3,4).2", Group(
  ( 5,50,24,26,57)( 6,49,23,25,58)( 7,52,22,28,59)( 8,51,21,27,60)
    ( 9,19,42,47,29)(10,20,41,48,30)(11,17,44,45,31)(12,18,43,46,32)
    (13,36,63,56,37)(14,35,64,55,38)(15,34,61,54,39)(16,33,62,53,40),
  ( 2, 6)( 3,16)( 4,11)( 7,12)( 8,15)( 9,13)(17,40)(18,35)(19,41)(20,46)
    (21,36)(22,39)(23,45)(24,42)(25,44)(26,47)(27,37)(28,34)(29,48)(30,43)
    (31,33)(32,38)(49,58)(50,61)(51,55)(53,62)(54,57)(60,64),
  ( 1,33)( 2,34)( 3,35)( 4,36)( 5,37)( 6,38)( 7,39)( 8,40)( 9,41)(10,42)
    (11,43)(12,44)(13,45)(14,46)(15,47)(16,48)(17,49)(18,50)(19,51)(20,52)
    (21,53)(22,54)(23,55)(24,56)(25,57)(26,58)(27,59)(28,60)(29,61)(30,62)
    (31,63)(32,64) ) ],
   [ "3.A_6 max GL(3,4)", Group(
  ( 5,50,24,26,57)( 6,49,23,25,58)( 7,52,22,28,59)( 8,51,21,27,60)
    ( 9,19,42,47,29)(10,20,41,48,30)(11,17,44,45,31)(12,18,43,46,32)
    (13,36,63,56,37)(14,35,64,55,38)(15,34,61,54,39)(16,33,62,53,40),
  ( 2,23)( 3,44)( 4,62)( 5,20)( 7,57)( 8,47)( 9,34)(10,56)(12,29)(13,51)
    (14,37)(15,26)(17,58)(18,48)(21,43)(22,61)(27,52)(28,38)(31,33)(32,55)
    (35,54)(40,49)(41,64)(46,59),
  ( 1,33)( 2,34)( 3,35)( 4,36)( 5,37)( 6,38)( 7,39)( 8,40)( 9,41)(10,42)
    (11,43)(12,44)(13,45)(14,46)(15,47)(16,48)(17,49)(18,50)(19,51)(20,52)
    (21,53)(22,54)(23,55)(24,56)(25,57)(26,58)(27,59)(28,60)(29,61)(30,62)
    (31,63)(32,64) ) ],
 function() return
 PrimitiveAffinePermGroupByMatrixGroup( StabFldExt( GL( 2, 8 ), 3 ) );
 end,
 function() return
  PrimitiveAffinePermGroupByMatrixGroup( StabFldExt( SL( 2, 8 ), 3 ) );
 end,
 function() return
  PrimitiveAffinePermGroupByMatrixGroup( GLnbylqtolInGLnq( GL( 2, 8 ), 3 ) );
 end,
 function() return
   PrimitiveAffinePermGroupByMatrixGroup( GLnbylqtolInGLnq( SL( 2, 8 ), 3 ) );
 end,

 # stabilizers of tensor products
 function() return
 PrimitiveAffinePermGroupByMatrixGroup( CentralProductOfMatrixGroups(
   GL( 3, 2 ), GL( 2, 2 ) ) );
 end,
 function() return
  PrimitiveAffinePermGroupByMatrixGroup( CentralProductOfMatrixGroups(
    GL( 3, 2 ), Group( [[1,1],[1,0]]*Z(2) ) ) );
 end,

 # classical subgroups
 function() return
 PrimitiveAffinePermGroupByMatrixGroup( Sp( 6, 2 ) );
 end,
 function() return
  PrimitiveAffinePermGroupByMatrixGroup( O( -1, 6, 2 ) );
 end,
 function() return
   PrimitiveAffinePermGroupByMatrixGroup( DerivedSubgroup( O( -1, 6, 2 ) ) );
 end,
 function() return
  PrimitiveAffinePermGroupByMatrixGroup( O( +1, 6, 2 ) );
 end,
 function() return
   PrimitiveAffinePermGroupByMatrixGroup( DerivedSubgroup( O( +1, 6, 2 ) ) );
 end,
   [ "S_7 max S_8 = O+(6,2) max Sp(6,2)", Group(
    ( 2,54,18, 8,21,30,44)( 3,15,35,56,32,38,36)( 4,60,52,49,12,57, 9)
    ( 5,48,47,28,11,14,26)( 6,27,64,29,31,17,51)( 7,34,13,45,22,41,59)
    (10,55,43,53,37,23,20)(16,24,39,25,50,63,42)(19,61,40,46,33,58,62),
    ( 3, 8)( 4, 7)( 9,31)(10,32)(11,26)(12,25)(13,27)(14,28)(15,30)(16,29)
    (17,22)(18,21)(33,51)(34,52)(35,54)(36,53)(37,55)(38,56)(39,50)(40,49)
    (41,45)(42,46)(43,44)(47,48)(57,58)(59,63)(60,64)(61,62),
    ( 1,33)( 2,34)( 3,35)( 4,36)( 5,37)( 6,38)( 7,39)( 8,40)( 9,41)(10,42)
    (11,43)(12,44)(13,45)(14,46)(15,47)(16,48)(17,49)(18,50)(19,51)(20,52)
    (21,53)(22,54)(23,55)(24,56)(25,57)(26,58)(27,59)(28,60)(29,61)(30,62)
    (31,63)(32,64) ) ],
    [ "(S_7 max S_8 = O+(6,2) max Sp(6,2))'", Group(
    ( 1,19)( 2,20)( 3,17)( 4,18)( 5,23)( 6,24)( 7,21)( 8,22)( 9,27)
    (10,28)(11,25)(12,26)(13,31)(14,32)(15,29)(16,30)(33,51)(34,52)(35,49)
    (36,50)(37,55)(38,56)(39,53)(40,54)(41,59)(42,60)(43,57)(44,58)(45,63)
    (46,64)(47,61)(48,62), ( 1,26)( 2,25)( 3,28)( 4,27)( 5,30)( 6,29)( 7,32)
    ( 8,31)( 9,18)(10,17)(11,20)(12,19)(13,22)(14,21)(15,24)(16,23)(33,58)
    (34,57)(35,60)(36,59)(37,62)(38,61)(39,64)(40,63)(41,50)(42,49)(43,52)
    (44,51)(45,54)(46,53)(47,56)(48,55), ( 2,53,32,10,36)( 3,30,21,56,55)
    ( 4,42,12,63,22)( 5,14,47,48,28)( 6,58,50,39,57)( 7,17,59,25,46)
    ( 8,37,38,18,15)( 9,24,31,62,61)(13,27,49,19,40)(16,52,60,45,51)
    (23,43,35,54,44)(29,33,41,64,34), ( 1, 9)( 2,10)( 3,11)( 4,12)( 5,13)
    ( 6,14)( 7,15)( 8,16)(17,25)(18,26)(19,27)(20,28)(21,29)(22,30)(23,31)
    (24,32)(33,41)(34,42)(35,43)(36,44)(37,45)(38,46)(39,47)(40,48)(49,57)
    (50,58)(51,59)(52,60)(53,61)(54,62)(55,63)(56,64),
  ( 1,61)( 2,62)( 3,63)( 4,64)( 5,57)( 6,58)( 7,59)( 8,60)( 9,53)(10,54)
    (11,55)(12,56)(13,49)(14,50)(15,51)(16,52)(17,45)(18,46)(19,47)(20,48)
    (21,41)(22,42)(23,43)(24,44)(25,37)(26,38)(27,39)(28,40)(29,33)(30,34)
    (31,35)(32,36), ( 1,62)( 2,61)( 3,64)( 4,63)( 5,58)( 6,57)( 7,60)( 8,59)
    ( 9,54)(10,53)(11,56)(12,55)(13,50)(14,49)(15,52)(16,51)(17,46)(18,45)
    (19,48)(20,47)(21,42)(22,41)(23,44)(24,43)(25,38)(26,37)(27,40)(28,39)
    (29,34)(30,33)(31,36)(32,35), ( 1,31)( 2,32)( 3,29)( 4,30)( 5,27)( 6,28)
    ( 7,25)( 8,26)( 9,23)(10,24)(11,21)(12,22)(13,19)(14,20)(15,17)(16,18)
    (33,63)(34,64)(35,61)(36,62)(37,59)(38,60)(39,57)(40,58)(41,55)(42,56)
    (43,53)(44,54)(45,51)(46,52)(47,49)(48,50),
  ( 2,20,53,56,18)( 3,54,37,38,55)( 4,39,17,19,40)( 6,24,49,52,22)
    ( 7,50,33,34,51)( 8,35,21,23,36)( 9,27,62,63,25)(11,48,26,28,47)
    (12,61,46,45,64)(13,31,58,59,29)(15,44,30,32,43)(16,57,42,41,60) ) ],
  [ "U_3(3):2 max Sp(6,2)", Group(
  ( 2,58)( 3, 5)( 4,62)( 6,60)( 8,64)( 9,17)(10,42)(11,21)(12,46)
    (13,19)(14,44)(15,23)(16,48)(18,50)(20,54)(22,52)(24,56)(26,34)(27,29)
    (28,38)(30,36)(32,40)(35,37)(41,49)(43,53)(45,51)(47,55)(59,61),
  ( 2,14, 9, 5)( 3,19,51,35)( 4,32,59,39)( 6,13)( 7,20,64,43)( 8,31,56,47)
    (11,23,52,48)(12,28,60,44)(15,24,63,40)(16,27,55,36)(17,33)(18,46,25,37)
    (21,34,30,41)(22,45)(26,42)(29,38)(50,62,57,53)(54,61),
  ( 1,33)( 2,34)( 3,35)( 4,36)( 5,37)( 6,38)( 7,39)( 8,40)( 9,41)(10,42)
    (11,43)(12,44)(13,45)(14,46)(15,47)(16,48)(17,49)(18,50)(19,51)(20,52)
    (21,53)(22,54)(23,55)(24,56)(25,57)(26,58)(27,59)(28,60)(29,61)(30,62)
    (31,63)(32,64) ) ],
   [ "(U_3(3):2 max Sp(6,2))'", Group(
  ( 2, 9)( 3,51)( 4,59)( 5,14)( 7,64)( 8,56)(11,52)(12,60)(15,63)
    (16,55)(18,25)(19,35)(20,43)(21,30)(23,48)(24,40)(27,36)(28,44)(31,47)
    (32,39)(34,41)(37,46)(50,57)(53,62),
  ( 2, 5, 6)( 3,58,60)( 4,62,63)( 7,61,59)( 8,57,64)( 9,17,35,53,43,37)
    (10,21,40,54,47,34)(11,42,26,55,20,32)(12,46,29,56,24,27)(13,22,36,49,48,
     38)(14,18,39,50,44,33)(15,45,25,51,23,31)(16,41,30,52,19,28),
  ( 1,33)( 2,34)( 3,35)( 4,36)( 5,37)( 6,38)( 7,39)( 8,40)( 9,41)(10,42)
    (11,43)(12,44)(13,45)(14,46)(15,47)(16,48)(17,49)(18,50)(19,51)(20,52)
    (21,53)(22,54)(23,55)(24,56)(25,57)(26,58)(27,59)(28,60)(29,61)(30,62)
    (31,63)(32,64) ) ],
   [ "L_2(7):2 max U_3(3):2 max Sp(6,2)", Group(
    ( 2,29,13,62,47, 6, 8)( 3, 7,30,17,50,20,44)( 4,27,18,46,32,23,45)
    ( 5,28,14,34,35,57,42)( 9,39,36,37,38,58,54)(10,59,48,26,12,61,51)
    (11,33,63,53,21,43,31)(15,60,52,22,55,19,56)(16,40,64,41,25,24,49),
  ( 2,47,46,51,60,61)( 3,50,37,54, 7,20)( 4,32,10, 8,62,48)( 5,35,39)
    ( 6,13,12,55,26,27)( 9,42,17,30,57,36)(11,25,53,41,63,49)(14,38,28,44,34,
     58)(15,59,19,45,29,23)(16,21,64,31,40,43)(18,52,22)(24,33),
  ( 1,33)( 2,34)( 3,35)( 4,36)( 5,37)( 6,38)( 7,39)( 8,40)( 9,41)(10,42)
    (11,43)(12,44)(13,45)(14,46)(15,47)(16,48)(17,49)(18,50)(19,51)(20,52)
    (21,53)(22,54)(23,55)(24,56)(25,57)(26,58)(27,59)(28,60)(29,61)(30,62)
    (31,63)(32,64) ) ]
];

#############################################################################
##
##  Local Variables:
##  mode:             text
##  mode:             outline-minor
##  outline-regexp:   " *[^ 0-9(),ef]"
##  fill-column:      79
##  End:
