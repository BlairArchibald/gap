%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%A  grpmat.msk                  GAP documentation            Alexander Hulpke
%%
%A  @(#)$Id$
%%
%Y  (C) 1998 School Math and Comp. Sci., University of St.  Andrews, Scotland
%%
\Chapter{Matrix Groups}

Matrix groups are groups generated by invertible square matrices.

\beginexample
gap> m1 := [ [ Z(3)^0, Z(3)^0,   Z(3) ],
>            [   Z(3), 0*Z(3),   Z(3) ],
>            [ 0*Z(3),   Z(3), 0*Z(3) ] ];;
gap> m2 := [ [   Z(3),   Z(3), Z(3)^0 ],
>            [   Z(3), 0*Z(3),   Z(3) ],
>            [ Z(3)^0, 0*Z(3),   Z(3) ] ];; 
gap> m := Group( m1, m2 );
Group(
[ [ [ Z(3)^0,Z(3)^0,Z(3) ], [ Z(3),0*Z(3),Z(3) ], [ 0*Z(3),Z(3),0*Z(3) ] ], 
  [ [ Z(3),Z(3),Z(3)^0 ], [ Z(3),0*Z(3),Z(3) ], [ Z(3)^0,0*Z(3),Z(3) ] ] ])
\endexample

\Declaration{IsMatrixGroup}

For most operations, {\GAP} only provides methods for finite matrix groups.
Many calculations in finite matrix groups are done via a `NiceMonomorphism'
(see "Nice Monomorphisms") that represents a faithful action on vectors.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Attributes and Properties for Matrix Groups}

\Declaration{DimensionOfMatrixGroup}
\Declaration{DefaultFieldOfMatrixGroup}
\Declaration{FieldOfMatrixGroup}
\beginexample
gap> DimensionOfMatrixGroup(m);
3
gap> DefaultFieldOfMatrixGroup(m);
GF(3)
\endexample

\Declaration{TransposedMatrixGroup}
\beginexample
gap> G := Group( [[0,-1],[1,0]] );
Group([ [ [ 0, -1 ], [ 1, 0 ] ] ])
gap> T := TransposedMatrixGroup( G );
Group([ [ [ 0, 1 ], [ -1, 0 ] ] ])
gap> IsIdenticalObj( G, TransposedMatrixGroup( T ) );
true
\endexample

\Declaration{IsNaturalGL}
\Declaration{IsGeneralLinearGroup}
\Declaration{IsNaturalSL}
\Declaration{IsSpecialLinearGroup}
\beginexample
gap> IsNaturalGL(m);     
false
\endexample

\Declaration{IsSubgroupSL}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Invariant Forms}

\Declaration{InvariantBilinearForm}
\Declaration{IsFullSubgroupGLorSLRespectingBilinearForm}
\Declaration{InvariantSesquilinearForm}
\Declaration{IsFullSubgroupGLorSLRespectingSesquilinearForm}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Matrix Groups in Characteristic 0}

Most of the functions described in this and the following section have
implementations which use functions from the share package Carat. If
Carat is not installed or not compiled, no suitable methods are available.

\Declaration{IsCyclotomicMatrixGroup}
\Declaration{IsRationalMatrixGroup}
\Declaration{IsIntegerMatrixGroup}

\Declaration{IsNaturalGLnZ}
\beginexample
gap> IsNaturalGLnZ( GL( 2, Integers ) );
true
\endexample

\Declaration{InvariantLattice}
\Declaration{NormalizerInGLnZ}
\Declaration{CentralizerInGLnZ}
\Declaration{ZClassRepsQClass}
\Declaration{IsBravaisGroup}
\Declaration{BravaisGroup}
\Declaration{BravaisSubgroups}
\Declaration{BravaisSupergroups}
\Declaration{NormalizerInGLnZBravaisGroup}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Acting OnRight and OnLeft}

\FileHeader{grpramat}[1]

\Declaration{CrystGroupDefaultAction}
\Declaration{SetCrystGroupDefaultAction}







