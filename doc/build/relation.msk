%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%A  relation.msk                GAP documentation          Andrew Solomon      
%%
%A  @(#)$Id$
%%
%Y  (C) 1999 School Math and Comp. Sci., University of St.  Andrews, Scotland
%Y  Copyright (C) 2002 The GAP Group
%%
\Chapter{Relations}


\FileHeader{relation}[1]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{General Binary Relations}

\Declaration{IsBinaryRelation}

We have the following general constructors.

\Declaration{BinaryRelationByElements}
\Declaration{IdentityBinaryRelation}
\Declaration{EmptyBinaryRelation}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Properties and Attributes of Binary Relations}

\Declaration{IsReflexiveBinaryRelation}
\Declaration{IsSymmetricBinaryRelation}
\Declaration{IsTransitiveBinaryRelation}
\Declaration{IsAntisymmetricBinaryRelation}
\Declaration{IsPreOrderBinaryRelation}
\Declaration{IsPartialOrderBinaryRelation}
\Declaration{IsHasseDiagram}
\Declaration{IsEquivalenceRelation}

\Declaration{Successors}
\Declaration{DegreeOfBinaryRelation}
\Declaration{PartialOrderOfHasseDiagram}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Binary Relations on Points}

We have special construction methods when the underlying <X> of our relation
is the set of integers $\{1,\dots, n \}$. 

\Declaration{BinaryRelationOnPoints}
\Declaration{RandomBinaryRelationOnPoints}

\Declaration{AsBinaryRelationOnPoints}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Closure Operations and Other Constructors}

\Declaration{ReflexiveClosureBinaryRelation}
\Declaration{SymmetricClosureBinaryRelation}
\Declaration{TransitiveClosureBinaryRelation}
\Declaration{HasseDiagramBinaryRelation}
\Declaration{StronglyConnectedComponents}

\Declaration{PartialOrderByOrderingFunction}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Equivalence Relations}

\index{equivalence relation}
An *equivalence relation* <E> over the set <X> is a relation on <X> which 
is reflexive, symmetric, and transitive. 
of the set <X>. A *partition* <P> is a set of subsets of <X> such that
for all $R,S\in P$ $R\cap S$ is the empty set and $\cup P=X$.  
An equivalence relation induces a partition such that if $(x,y)\in E$ then
$x,y$ are in the same element of <P>.

Like all binary relations in {\GAP} equivalence 
relations are regarded as general endomorphic mappings (and the operations,
properties and attributes of general mappings are available). 
However, partitions provide an efficient way of representing equivalence 
relations.  Moreover, only the non-singleton classes
or blocks are listed allowing for small equivalence relations to be
represented on infinite sets. Hence the main attribute of equivalence 
relations is `EquivalenceRelationPartition' which provides the partition
induced by the given equivalence.

\Declaration{EquivalenceRelationByPartition}
\Declaration{EquivalenceRelationByRelation}
\Declaration{EquivalenceRelationByPairs}
\Declaration{EquivalenceRelationByProperty}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Attributes of and Operations on Equivalence Relations} 

\Declaration{EquivalenceRelationPartition}
\Declaration{GeneratorsOfEquivalenceRelationPartition}

\Declaration{JoinEquivalenceRelations}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Equivalence Classes}

\Declaration{IsEquivalenceClass}
\Declaration{EquivalenceClassRelation}
\Declaration{EquivalenceClasses}!{attribute}
\Declaration{EquivalenceClassOfElement}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%E
